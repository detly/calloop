var searchIndex = JSON.parse('{\
"calloop":{"doc":"Calloop, a Callback-based Event Loop","t":[18,3,18,18,13,16,3,8,3,3,3,13,3,3,16,4,13,3,18,3,3,16,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,10,12,12,10,11,11,11,10,11,11,0,11,12,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,3,13,4,13,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BOTH","Dispatcher","EMPTY","EMPTY","Edge","Event","EventLoop","EventSource","Idle","InsertError","Interest","Level","LoopHandle","LoopSignal","Metadata","Mode","OneShot","Poll","READ","Readiness","RegistrationToken","Ret","Token","WRITE","adapt_io","as_source_mut","as_source_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","channel","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","disable","dispatch","enable","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","futures","generic","get_signal","handle","insert_idle","insert_source","into","into","into","into","into","into","into","into","into","into","into","into","into_source_inner","io","kill","ne","ne","new","ping","process_events","readable","readable","register","register","register_dispatcher","remove","reregister","reregister","run","signals","source","source","stop","sub_id","timer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister","unregister","update","wakeup","with_sub_id","writable","writable","Channel","Closed","Event","Msg","Sender","SyncSender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","drop","from","from","from","from","into","into","into","into","process_events","register","reregister","send","send","sync_channel","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_send","type_id","type_id","type_id","type_id","unregister","Executor","Scheduler","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","executor","from","from","into","into","process_events","register","reregister","schedule","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unregister","0","Fd","Generic","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","file","from","from","from_fd","interest","into","into","mode","new","process_events","register","reregister","try_from","try_from","try_into","try_into","type_id","type_id","unregister","unwrap","Async","Readable","Writable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","from","from","from","get_mut","into","into","into","into_future","into_future","into_inner","poll","poll","poll_close","poll_flush","poll_read","poll_read_vectored","poll_write","poll_write_vectored","readable","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","writable","Ping","PingSource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","from","from","into","into","make_ping","ping","process_events","register","reregister","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unregister","Event","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","Signal","Signals","add_signals","as_ref","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","drop","eq","eq","fmt","fmt","fmt","from","from","from","from","from_str","full_info","hash","hash","into","into","into","into","iterator","ne","new","partial_cmp","process_events","register","remove_signals","reregister","set_signals","siginfo","signal","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unregister","Timeout","Timer","TimerHandle","add_timeout","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel_all_timeouts","cancel_timeout","clone","clone_into","from","from","from","handle","into","into","into","new","process_events","register","reregister","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unregister"],"q":["calloopcalloop::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::futures","","","","","","","","","","","","","","","","","","","","","","","","","calloop::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::ping","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::timer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Shorthand for read and write interest","An event source with its callback.","Shorthand for empty interest","Shorthand for empty readiness","Edge-triggering","The type of events generated by your source.","An event loop","Trait representing an event source","An idle callback that was inserted in this loop","An error generated when trying to insert an event source","Interest to register regarding the file descriptor","Level-triggering","An handle to an event loop","A signal that can be shared between thread to stop or â€¦","Some metadata of your event source","Possible modes for registering a file descriptor","Single event generation","The polling system","Shorthand for read interest","Readiness for a file descriptor notification","A token representing a registration in the [<code>EventLoop</code>].","The return type of the user callback","A token (for implementation of the <code>EventSource</code> trait)","Shorthand for write interest","Wrap an IO object into an async adapter","Returns a mutable reference to the event source.","Returns an immutable reference to the event source.","","","","","","","","","","","","","","","","","","","","","","","","","Cancel the idle callback if it was not already run","An MPSC channel whose receiving end is an event source","","","","","","","","","","","","","","","Disables this event source.","Dispatch pending events to their callbacks","Enables this previously disabled event source.","","","The generated error","Is the FD in an error state","","","","","","","","","","","","","","","","","","","","A futures executor as an event source","A generic event source wrapping an IO objects or file â€¦","Get a signal to stop this event loop from running","Retrieve a loop handle","Inserts an idle callback.","Inserts a new event source in the loop.","","","","","","","","","","","","","Consumes the Dispatcher and returns the inner event â€¦","Adapters for async IO objects","Removes this source from the event loop.","","","Builds a dispatcher.","Ping to the event loop","Process any relevant events","Wait for the FD to be readable","Is the FD readable","Register yourself to this poll instance","Register a new file descriptor for polling","Registers a <code>Dispatcher</code> in the loop.","Removes this source from the event loop.","Re-register your file descriptors","Update the registration for a file descriptor","Run this event loop","Event source for tracking Unix signals","","The source that could not be inserted","Stop the event loop","The source-internal ID","Timer-based event sources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new event loop","","","","","","","","","","","","","Unregister your file descriptors","Unregister a file descriptor","Makes this source update its registration.","Wake up the event loop","Provide a copy of the Token with the given <code>sub_id</code>.","Wait for the FD to be writable","Is the FD writable","The receiving end of the channel","The channel was closed","The events generated by the channel event source","A message was received and is bundled here","The sender end of a channel","The sender end of a synchronous channel","","","","","","","","","Create a new asynchronous channel","","","","","","","","","","","","","","","","","Send a message to the channel","Send a message to the synchronous channel","Create a new synchronous, bounded channel","","","","","","","","","","","Send a message to the synchronous channel","","","","","","A future executor as an event source","A scheduler to send futures to an executor","","","","","","","Create a new executor, and its associated scheduler","","","","","","","","Sends the given future to the executor associated to this â€¦","","","","","","","","","","A wrapper to insert a raw file descriptor into a <code>Generic</code> â€¦","A generic event source wrapping a FD-backed type","","","","","","The wrapped FD-backed type","","","Wrap a raw file descriptor into a <code>Generic</code> event source","The programmed interest","","","The programmed mode","Wrap a FD-backed type into a <code>Generic</code> event source","","","","","","","","","","","Unwrap the <code>Generic</code> source to retrieve the underlying type","Adapter for async IO manipulations","A future that resolves once the associated object becomes â€¦","A future that resolves once the associated object becomes â€¦","","","","","","","","","","","Mutably access the underlying IO object","","","","","","Remove the async adapter and retrieve the underlying â€¦","","","","","","","","","A future that resolves once the object becomes ready for â€¦","","","","","","","","","","A future that resolves once the object becomes ready for â€¦","The Ping handle","The ping event source","","","","","","","","","","","","Create a new ping event source","Send a ping to the <code>PingSource</code>","","","","","","","","","","","","An event generated by the signal event source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An event source for receiving Unix signals","Add a list of signals to the signals source","","Returns name of signal.","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the full <code>siginfo_t</code> associated with this signal â€¦","","","","","","","","","Create a new signal event source listening on the â€¦","","","","Remove a list of signals from the signals source","","Replace the list of signals of the source","","Retrieve the signal number that was receive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An itentifier to cancel a timeout if necessary","A Timer event source","An handle to a timer, used to set or cancel timeouts","Set a new timeout","","","","","","","Cancel all planned timeouts for this timer","Cancel a previsouly set timeout and retrieve the â€¦","","","","","","Get an handle for this timer","","","","Create a new timer","","","","","","","","","","","","","",""],"i":[1,0,1,2,3,4,0,0,0,0,0,3,0,0,4,0,3,0,1,0,0,4,0,1,5,6,6,7,5,8,9,6,10,3,1,2,11,12,13,7,5,8,9,6,10,3,1,2,11,12,13,10,0,5,6,3,1,2,11,13,5,6,3,1,2,11,13,5,9,5,11,12,8,2,8,8,3,1,2,11,12,7,5,8,9,6,10,3,1,2,11,12,13,0,0,9,9,5,5,7,5,8,9,6,10,3,1,2,11,12,13,6,0,5,11,12,6,0,4,1,2,4,7,5,5,4,7,9,0,8,8,13,11,0,5,6,3,1,2,11,13,8,7,5,8,9,6,10,3,1,2,11,12,13,7,5,8,9,6,10,3,1,2,11,12,13,9,7,5,8,9,6,10,3,1,2,11,12,13,4,7,5,13,11,1,2,0,14,0,14,0,0,14,15,16,17,14,15,16,17,0,15,16,15,16,15,14,15,16,17,14,15,16,17,17,17,17,15,16,0,15,16,14,15,16,17,14,15,16,17,16,14,15,16,17,17,0,0,18,19,18,19,19,19,0,18,19,18,19,18,18,18,19,19,18,19,18,19,18,19,18,20,0,0,20,21,20,21,20,21,21,20,21,21,21,20,21,21,21,21,21,21,20,21,20,21,20,21,21,0,0,0,22,23,24,22,23,24,22,22,23,24,22,22,23,24,23,24,22,23,24,22,22,22,22,22,22,22,22,23,24,22,23,24,22,23,24,22,0,0,25,26,25,26,26,26,25,25,26,25,26,0,26,25,25,25,26,25,26,25,26,25,26,25,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,28,27,27,28,29,27,30,28,29,27,30,29,27,30,29,27,30,27,28,27,30,27,27,30,28,29,27,30,27,29,27,30,28,29,27,30,27,30,28,27,28,28,28,28,28,0,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,29,27,30,27,28,29,27,27,30,28,29,27,30,28,29,27,30,28,0,0,0,31,32,31,33,32,31,33,31,31,31,31,32,31,33,32,32,31,33,32,32,32,32,31,32,31,33,32,31,33,32,31,33,32],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asrawfd",8]],[["async",3],["result",6]]],[[],["refmut",3]],[[],["ref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["dispatcher",3]],[[],["mode",4]],[[],["interest",3]],[[],["readiness",3]],[[],["token",3]],[[],["loopsignal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["registrationtoken",3]],["result",6]],[[["into",8],["option",4]],["result",6]],[[["registrationtoken",3]],["result",6]],[[["token",3]],["bool",15]],[[["registrationtoken",3]],["bool",15]],null,null,[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["loopsignal",3]],[[],["loophandle",3]],[[["fnonce",8]],["idle",3]],[[],[["result",4],["registrationtoken",3],["inserterror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["registrationtoken",3]]],[[["token",3]],["bool",15]],[[["registrationtoken",3]],["bool",15]],[[]],null,[[["token",3],["readiness",3]],["result",6]],null,null,[[["poll",3],["token",3]],["result",6]],[[["interest",3],["token",3],["mode",4],["rawfd",6]],["result",6]],[[["dispatcher",3]],[["result",6],["registrationtoken",3]]],[[["registrationtoken",3]]],[[["poll",3],["token",3]],["result",6]],[[["interest",3],["token",3],["mode",4],["rawfd",6]],["result",6]],[[["into",8],["option",4]],["result",6]],null,[[],[["error",8],["option",4]]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],[[["rawfd",6]],["result",6]],[[["registrationtoken",3]],["result",6]],[[]],[[["u32",15]],["token",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sender",3]],[[],["syncsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[],[["result",4],["senderror",3]]],[[],[["result",4],["senderror",3]]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["trysenderror",4],["result",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[],["scheduler",3]],[[]],[[],["result",6]],[[]],[[]],[[]],[[]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],null,null,null,[[],["rawfd",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["interest",3],["mode",4],["rawfd",6]],[["generic",3],["fd",3]]],null,[[]],[[]],null,[[["interest",3],["mode",4]],["generic",3]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3],["pin",3]],["taskpoll",4]],[[["context",3],["pin",3]],["taskpoll",4]],[[["context",3],["pin",3]],[["result",6],["taskpoll",4]]],[[["context",3],["pin",3]],[["result",6],["taskpoll",4]]],[[["context",3],["pin",3]],[["taskpoll",4],["result",6]]],[[["context",3],["pin",3]],[["taskpoll",4],["result",6]]],[[["context",3],["pin",3]],[["taskpoll",4],["result",6]]],[[["context",3],["pin",3]],[["taskpoll",4],["result",6]]],[[],["readable",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["writable",3]],null,null,[[]],[[]],[[]],[[]],[[],["ping",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["event",3]],[[],["signal",4]],[[],["signalfd_siginfo",3]],[[]],[[]],[[]],[[["signal",4]],["ordering",4]],[[]],[[["signal",4]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["error",4],["signal",4]]],[[],["siginfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["signaliterator",3]],[[["signalfd_siginfo",3]],["bool",15]],[[],[["signals",3],["result",6]]],[[["signal",4]],[["option",4],["ordering",4]]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[],["result",6]],[[["poll",3],["token",3]],["result",6]],[[],["result",6]],null,[[],["signal",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["i32",15]],[["result",4],["error",4],["signal",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]],null,null,null,[[["duration",3]],["timeout",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["timeout",3]],["option",4]],[[],["timerhandle",3]],[[]],[[]],[[]],[[]],[[],["timerhandle",3]],[[]],[[]],[[]],[[],[["timer",3],["result",6]]],[[["token",3],["readiness",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["poll",3]],["result",6]]],"p":[[3,"Interest"],[3,"Readiness"],[4,"Mode"],[8,"EventSource"],[3,"LoopHandle"],[3,"Dispatcher"],[3,"Poll"],[3,"InsertError"],[3,"EventLoop"],[3,"Idle"],[3,"Token"],[3,"RegistrationToken"],[3,"LoopSignal"],[4,"Event"],[3,"Sender"],[3,"SyncSender"],[3,"Channel"],[3,"Executor"],[3,"Scheduler"],[3,"Fd"],[3,"Generic"],[3,"Async"],[3,"Readable"],[3,"Writable"],[3,"PingSource"],[3,"Ping"],[4,"Signal"],[3,"Signals"],[3,"Event"],[3,"siginfo"],[3,"TimerHandle"],[3,"Timer"],[3,"Timeout"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};